name: Generate a build (from -b main) and push to another branch (to -b build)

on:
  push:
    branches:
      - main
 
jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Push
    steps:
      - name: git-checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
      
      - name: Create swap space using dd
        run: |
          sudo dd if=/dev/zero of=/tmp/swapfile bs=1M count=8192
          sudo chmod 600 /tmp/swapfile
          sudo mkswap /tmp/swapfile
          sudo swapon /tmp/swapfile
          sudo swapon --show
          free -h
      
      - name: Increase Node.js memory limit
        run: |
         export NODE_OPTIONS="--max-old-space-size=16384"
        shell: /usr/bin/bash -e {0}

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
        
      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm install --force
        
      - name: Angular Install
        run:  npm install -g @angular/cli@19

      - name: Build
        run: |                                              # The build command of your project
          node --print "v8.getHeapStatistics().heap_size_limit"
          export NODE_OPTIONS="--max-old-space-size=16384"
          node --print "v8.getHeapStatistics().heap_size_limit"
          ng build --base-href=/custom-datepicker-angularV19/ --configuration=production
    
      - name: Push
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: build # The branch name where you want to push the assets
          FOLDER: dist/my-angular-app-v19/browser # The directory where your assets are generated
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Build: ({sha}) {msg}" # The commit message   
